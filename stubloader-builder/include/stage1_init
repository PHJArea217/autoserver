#!/bin/sh

set -eu

if [ -r /__autoserver__/local/env ]; then
	. /__autoserver__/local/env
fi
trap 'exec /bin/sh' EXIT
if :; then
	if [ ! -c /dev/null ]; then
	       	mount -t devtmpfs none /dev
	fi
	if [ ! -d /proc/1 ]; then
		mount -t proc none /proc
	fi
	if [ ! -d /sys/fs ]; then
		mount -t sysfs none /sys
	fi
	mount -t tmpfs -o mode=0755 none /__autoserver__/new_root
	mkdir /__autoserver__/new_root/__autoserver__
	for root_file in /__autoserver__/data/*.txz; do
		sh -c 'cd /__autoserver__/new_root/__autoserver__ && tar -xJf "$1"' - "$root_file"
	done
	mkdir /__autoserver__/new_root/local_disk
	if [ -n "${autoserver_local_disk_mount_cmd:-}" ]; then
		sh -c "$autoserver_local_disk_mount_cmd" - "/__autoserver__/new_root/local_disk"
	fi
	mkdir /__autoserver__/new_root/rofs_root
	modprobe squashfs
	modprobe loop
	mount -t squashfs -o loop,ro,nosuid,nodev /__autoserver__/img/system.img /__autoserver__/new_root/rofs_root
	cd /__autoserver__/new_root
	mkdir boot_disk dev etc proc static sys
	ln -s rofs_root/usr usr
	ln -s usr/bin bin
	ln -s usr/lib lib
	ln -s usr/lib32 lib32
	ln -s usr/lib64 lib64
	ln -s usr/libx32 libx32
	ln -s usr/sbin sbin
	if [ ! -e etc/alternatives ]; then
		ln -s /rofs_root/etc/alternatives etc/alternatives
	fi
	ln -s ../__autoserver__/bin/busybox-s static/busybox
	ln -s busybox static/ln
	ln -s busybox static/sh
	pivot_root . boot_disk
	cd /
	umount -l /boot_disk/proc /boot_disk/sys /boot_disk/dev /boot_disk/run
	exec "/__autoserver__/bin/autoserver_init"
fi
