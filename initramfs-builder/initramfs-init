#!/bin/sh
set -eu
[ ! -f /proc/version ]
[ 1 = "$$" ]
trap 'exec /bin/sh' EXIT

if [ 1 -eq "${autoserver_check_initrd:-1}" ]; then
	[ ! -f /initrd.image ]
fi

: "${autoserver_dir:=autosvr}"

cd /
export PATH=/bin
/bin/mount -t tmpfs -o mode=0755 none /new_root
/bin/mount -t proc -o nosuid,nodev,noexec none /proc
/bin/mount -t sysfs -o nosuid,nodev,noexec none /sys
/bin/mount -t devtmpfs -o nosuid,noexec none /dev

# sysctl -w kernel.pid_max=4194304
/__autoserver__/vtrgb >/dev/null 2>&1 || :

[ -d /linux_modules ] && insmod /linux_modules/*.ko

[ -r /scripts/premount-script ] && . /scripts/premount-script

SEQ=0
while [ ! -e "$autoserver_boot_dev" ]; do
	sleep 2
	SEQ="$((SEQ+1))"
	if [ "$SEQ" -gt 10 ]; then
		break
	fi
	printf 'Waiting for %s... (attempt %d)\n' "$autoserver_boot_dev" "$SEQ"
done

/bin/mount -t "${autoserver_boot_fstype:-vfat}" -o "${autoserver_boot_opts:-ro}" "$autoserver_boot_dev" "/boot_disk"
/bin/mount -t squashfs -o ro,nosuid,nodev /boot_disk/"$autoserver_dir"/system.img /rofs_root

case "${autoserver_safe_mode:=0}" in
	2)
		for x in /boot_disk/"$autoserver_dir"/0_base.txz; do
			/usr/bin/bsdtar -xC /new_root -f "$x"
		done
		;;
	1)
		for x in /boot_disk/"$autoserver_dir"/0*.txz; do
			/usr/bin/bsdtar -xC /new_root -f "$x"
		done
		;;
	0)
		for x in /boot_disk/"$autoserver_dir"/*.txz; do
			/usr/bin/bsdtar -xC /new_root -f "$x"
		done
		if [ -d /root_modules ]; then
			for x in /root_modules/*.manifest; do
				if [ -s "$x" ]; then
					TAR_FILE="${x%.manifest}.tar"
					if sha256sum "$TAR_FILE" | grep -q "$(cat "$x") "; then
						/usr/bin/bsdtar -xC /new_root -f "$TAR_FILE"
					else
						printf '%s has incorrect checksum\n' "$TAR_FILE"
						false
					fi
				else
					printf '%s is empty; possible decompression error\n' "$x"
					false
				fi
			done
		fi
		;;
	*)
		printf 'Invalid value for autoserver_safe_mode: %s\n' "$autoserver_safe_mode"
		false
		;;
esac

mkdir -p /new_root/proc /new_root/sys /new_root/dev /new_root/rofs_root /new_root/boot_disk /new_root/kernel_modules

cd /

/bin/mount -t squashfs -o ro,nosuid,nodev /boot_disk/"$autoserver_dir"/k_mod.img /new_root/kernel_modules
/bin/mount --move /sys /new_root/sys
/bin/mount --move /rofs_root /new_root/rofs_root
/bin/mount --move /boot_disk /new_root/boot_disk
/bin/mount --move /dev /new_root/dev
/bin/mount --move /proc /new_root/proc
export PATH="${autoserver_PATH:-/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/local/games:/usr/games}"
[ -e /new_root/etc/alternatives ] || /bin/ln -s /rofs_root/etc/alternatives /new_root/etc/alternatives
exec /bin/busybox switch_root -c /dev/console /new_root "${autoserver_init:-/init_stage3}"
